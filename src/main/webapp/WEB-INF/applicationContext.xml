<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">

    <import resource="classpath:beans/mail.xml"/>
    <import resource="classpath:springmvc.xml"/>

    <!--这个类实例化我们可以得到sessionfactory。该类中有个属性configLocation通过这个属性我们就可以hibernate.cfg.xml建立联系了。-->
    <!--<bean id="sessionFactory" class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">-->
    <!--<property name="configLocation" value="classpath:hibernate.cfg.xml"/>-->
    <!--</bean>-->

    <!-- 数据库配置 -->

    <!-- dataSource -->
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
        <property name="driverClass" value="com.mysql.cj.jdbc.Driver"/>
        <property name="jdbcUrl"
                  value="jdbc:mysql://localhost:3306/tickets?useSSL=false&amp;useUnicode=true&amp;createDatabaseIfNotExist=true&amp;characterEncoding=utf-8"/>
        <property name="user" value="root"/>
        <property name="password" value="123456"/>

        <!-- these are C3P0 properties -->
        <property name="maxPoolSize" value="20"/>
        <property name="minPoolSize" value="5"/>
        <property name="unreturnedConnectionTimeout" value="120"/>
        <property name="maxStatements" value="100"/>
        <property name="idleConnectionTestPeriod" value="300"/>
        <property name="acquireIncrement" value="1"/>
        <property name="testConnectionOnCheckout" value="true"/>

    </bean>

    <!-- sessionFactory -->
    <bean id="sessionFactory" class="org.springframework.orm.hibernate5.LocalSessionFactoryBean"
          destroy-method="destroy">
        <!-- 指定数据源，此处是c3p0连接池 -->
        <property name="dataSource" ref="dataSource"/>
        <!-- 使用包扫描的方式, 推荐使用 -->
        <property name="packagesToScan">
            <list>
                <value>edu.nju.model</value>
            </list>
        </property>
        <!--&lt;!&ndash; 指定注解类所在位置 &ndash;&gt;-->
        <!--<property name="annotatedPackages">-->
        <!--<list>-->
        <!--<value>edu.nju.model</value>-->
        <!--</list>-->
        <!--</property>-->
        <!-- 指定注解类全名 -->
        <!--<property name="annotatedClasses">-->
        <!--<list>-->
        <!--</list>-->
        <!--</property>-->

        <!-- 舍弃原hibernate.cfg.xml文档 -->
        <property name="hibernateProperties">
            <props>
                <!-- hibernate的方言 -->
                <prop key="hibernate.dialect">org.hibernate.dialect.MySQL5Dialect</prop>
                <!-- 显示sql语句 -->
                <prop key="hibernate.show_sql">true</prop>
                <!-- 数据库自动更新 -->
                <prop key="hbm2ddl.auto">update</prop>
                <!-- 格式化SQL语句 -->
                <prop key="hibernate.format_sql">true</prop>
                <prop key="hibernate.current_session_context_class">org.springframework.orm.hibernate5.SpringSessionContext</prop>
            </props>
        </property>
    </bean>

    <!-- transactionManager -->
    <bean id="transactionManager"
          class="org.springframework.orm.hibernate5.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <!-- You can omit the transaction-manager attribute in the <tx:annotation-driven/> tag
    if the bean name of the PlatformTransactionManager that you want to wire in has the name transactionManager -->
    <!-- enable the configuration of transactional behavior based on annotations -->
    <tx:annotation-driven transaction-manager="transactionManager"/>
</beans>

